diff --git a/chrome/android/java/src/org/chromium/chrome/browser/browsing_data/ClearBrowsingDataFragment.java b/chrome/android/java/src/org/chromium/chrome/browser/browsing_data/ClearBrowsingDataFragment.java
index 2569ed7ae15e5ee4ad17681982edbf545b2f9efc..eb424e7319ea6ccccb2c479f522652fe11ed9967 100644
--- a/chrome/android/java/src/org/chromium/chrome/browser/browsing_data/ClearBrowsingDataFragment.java
+++ b/chrome/android/java/src/org/chromium/chrome/browser/browsing_data/ClearBrowsingDataFragment.java
@@ -48,7 +48,7 @@ import java.util.Set;
  * The user can choose which types of data to clear (history, cookies, etc), and the time range
  * from which to clear data.
  */
-public abstract class ClearBrowsingDataFragment extends PreferenceFragmentCompat
+public abstract class ClearBrowsingDataFragment extends org.chromium.chrome.browser.settings.BravePreferenceFragment
         implements BrowsingDataBridge.OnClearBrowsingDataListener,
                    Preference.OnPreferenceClickListener, Preference.OnPreferenceChangeListener {
     /**
@@ -220,7 +220,7 @@ public abstract class ClearBrowsingDataFragment extends PreferenceFragmentCompat
     /**
      * @return All available {@link DialogOption} entries.
      */
-    protected static final Set<Integer> getAllOptions() {
+    protected Set<Integer> getAllOptions() {
         assert DialogOption.CLEAR_HISTORY == 0;
 
         Set<Integer> all = new ArraySet<>();
@@ -231,6 +231,7 @@ public abstract class ClearBrowsingDataFragment extends PreferenceFragmentCompat
     }
 
     static @BrowsingDataType int getDataType(@DialogOption int type) {
+        if (BraveClearBrowsingDataPreferencesAdvanced.isValidDataType(type)) return BraveClearBrowsingDataPreferencesAdvanced.getDataType(type);
         switch (type) {
             case DialogOption.CLEAR_CACHE:
                 return BrowsingDataType.CACHE;
@@ -250,6 +251,7 @@ public abstract class ClearBrowsingDataFragment extends PreferenceFragmentCompat
     }
 
     static String getPreferenceKey(@DialogOption int type) {
+        if (BraveClearBrowsingDataPreferencesAdvanced.isValidDataType(type)) return BraveClearBrowsingDataPreferencesAdvanced.getPreferenceKey(type);
         switch (type) {
             case DialogOption.CLEAR_CACHE:
                 return "clear_cache_checkbox";
@@ -269,6 +271,7 @@ public abstract class ClearBrowsingDataFragment extends PreferenceFragmentCompat
     }
 
     static @DrawableRes int getIcon(@DialogOption int type) {
+        if (BraveClearBrowsingDataPreferencesAdvanced.isValidDataType(type)) return BraveClearBrowsingDataPreferencesAdvanced.getIcon(type);
         switch (type) {
             case DialogOption.CLEAR_CACHE:
                 return R.drawable.ic_collections_grey;
